<%@ CodeTemplate Language="VB" Inherits="CodeSmith.BaseTemplates.SqlCodeTemplate" TargetLanguage="T-SQL" Description="Generates SELECT/INSERT/UPDATE/DELETE stored procedure based on a database table schema." %>
<%@ Property Name="SourceTable" Type="SchemaExplorer.TableSchema" Category="Context" Description="Table that the stored procedures should be based on." %>
<%@ Property Name="IncludeDrop" Type="System.Boolean" Default="True" Category="Options" Description="If true drop statements will be generated to drop existing stored procedures." %>
<%@ Property Name="IncludeInsert" Type="System.Boolean" Default="True" Category="Options" Description="If true insert statements will be generated." %>
<%@ Property Name="IncludeUpdate" Type="System.Boolean" Default="True" Category="Options" Description="If true update statements will be generated." %>
<%@ Property Name="IncludeDelete" Type="System.Boolean" Default="True" Category="Options" Description="If true delete statements will be generated." %>
<%@ Property Name="IncludeGet" Type="System.Boolean" Default="True" Category="Options" Description="If true get statements will be generated." %>
<%@ Property Name="IncludeGetList" Type="System.Boolean" Default="True" Category="Options" Description="If true getlist statements will be generated." %>
<%@ Property Name="InsertPrefix" Type="System.String" Default="Insert" Category="Style" Description="Prefix to use for all generated INSERT stored procedures." %>
<%@ Property Name="UpdatePrefix" Type="System.String" Default="Update" Category="Style" Description="Prefix to use for all generated UPDATE stored procedures." %>
<%@ Property Name="DeletePrefix" Type="System.String" Default="Delete" Category="Style" Description="Prefix to use for all generated DELETE stored procedures." %>
<%@ Property Name="SelectPrefix" Type="System.String" Default="Get" Category="Style" Description="Prefix to use for all generated SELECT stored procedures." %>
<%@ Assembly Name="SchemaExplorer" %>
<%@ Assembly Name="CodeSmith.BaseTemplates" %>
<%@ Assembly Name="CodeSmith.CustomProperties" %>
<%@ Assembly Name="System.Data" %>
<%@ Import Namespace="SchemaExplorer" %>
<%@ Import Namespace="System.Data" %>
<%Dim i AS INTEGER%>
<% IF IsNothing(SourceTable.PrimaryKey) THEN  %>
<% THROW NEW ApplicationException("Table must contain a primary key.") %>
<% END IF %> 
<% IF IncludeDrop THEN %>
	<% IF IncludeDelete THEN %>
		/****** Object:  Stored Procedure <%= SourceTable.Owner %>.Delete<%= SourceTable.Name %>    Script Date: <%= DateTime.Now.ToLongDateString() %> ******/
		if exists (select * from dbo.sysobjects where id = object_id(N'[dbo].[Delete<%= SourceTable.Name %>]') and OBJECTPROPERTY(id, N'IsProcedure') = 1)
		drop procedure [<%= SourceTable.Owner %>].[Delete<%= SourceTable.Name %>]
		GO
	<% END IF %>
	<% IF IncludeGet THEN %>
		/****** Object:  Stored Procedure <%= SourceTable.Owner %>.Get<%= SourceTable.Name %>    Script Date: <%= DateTime.Now.ToLongDateString() %> ******/
		if exists (select * from dbo.sysobjects where id = object_id(N'[dbo].[Get<%= SourceTable.Name %>]') and OBJECTPROPERTY(id, N'IsProcedure') = 1)
		drop procedure [<%= SourceTable.Owner %>].[Get<%= SourceTable.Name %>]
		GO
	<% END IF %>
	<% IF IncludeGetList THEN %>
		/****** Object:  Stored Procedure <%= SourceTable.Owner %>.Get<%= SourceTable.Name %>List    Script Date: <%= DateTime.Now.ToLongDateString() %> ******/
		if exists (select * from dbo.sysobjects where id = object_id(N'[dbo].[Get<%= SourceTable.Name %>List]') and OBJECTPROPERTY(id, N'IsProcedure') = 1)
		drop procedure [<%= SourceTable.Owner %>].[Get<%= SourceTable.Name %>List]
		GO
	<% END IF %>
	<% IF IncludeInsert THEN  %>
		/****** Object:  Stored Procedure <%= SourceTable.Owner %>.Insert<%= SourceTable.Name %>    Script Date: <%= DateTime.Now.ToLongDateString() %> ******/
		if exists (select * from dbo.sysobjects where id = object_id(N'[dbo].[Insert<%= SourceTable.Name %>]') and OBJECTPROPERTY(id, N'IsProcedure') = 1)
		drop procedure [<%= SourceTable.Owner %>].[Insert<%= SourceTable.Name %>]
		GO
	<% END IF %>
	<% IF IncludeUpdate THEN  %>
		/****** Object:  Stored Procedure <%= SourceTable.Owner %>.Update<%= SourceTable.Name %>    Script Date: <%= DateTime.Now.ToLongDateString() %> ******/
		if exists (select * from dbo.sysobjects where id = object_id(N'[dbo].[Update<%= SourceTable.Name %>]') and OBJECTPROPERTY(id, N'IsProcedure') = 1)
		drop procedure [<%= SourceTable.Owner %>].[Update<%= SourceTable.Name %>]
		GO
	<% END IF %>
<%END IF %>
<% IF IncludeDelete THEN  %>
	SET QUOTED_IDENTIFIER ON 
	GO
	SET ANSI_NULLS OFF 
	GO
	------------------------------------------------------------------------------------------------------------------------
	-- Date Created: <%= DateTime.Now.ToLongDateString() %>
	-- Created By:   Generated by CodeSmith
	------------------------------------------------------------------------------------------------------------------------
	CREATE PROCEDURE <%= SourceTable.Owner %>.<%= DeletePrefix %><%= SourceTable.Name %>
	<% FOR i = 0 TO SourceTable.PrimaryKey.MemberColumns.Count - 1%>
	<%=	 GetSqlParameterStatement(SourceTable.PrimaryKey.MemberColumns(i)) %>
	<% IF i < SourceTable.PrimaryKey.MemberColumns.Count - 1 THEN %>,<% END IF %>
	<% NEXT %>
	AS
	DELETE FROM [<%= SourceTable.Owner %>].[<%= SourceTable.Name %>]
	WHERE
	<% FOR i = 0 TO SourceTable.PrimaryKey.MemberColumns.Count - 1%>
	<% IF i > 0 THEN %>AND <% END IF %>[<%= SourceTable.PrimaryKey.MemberColumns(i).Name %>] = @<%= SourceTable.PrimaryKey.MemberColumns(i).Name %>
	<% NEXT %>
	GO
	SET QUOTED_IDENTIFIER OFF 
	GO
	SET ANSI_NULLS ON 
	GO
<% END IF %>
<% IF IncludeGet THEN %>
	SET QUOTED_IDENTIFIER OFF 
	GO
	SET ANSI_NULLS OFF 
	GO
	------------------------------------------------------------------------------------------------------------------------
	-- Date Created: <%= DateTime.Now.ToLongDateString() %>
	-- Created By:   Generated by CodeSmith
	------------------------------------------------------------------------------------------------------------------------
	CREATE PROCEDURE <%= SourceTable.Owner %>.<%= SelectPrefix %><%= SourceTable.Name %>
	<% FOR i = 0 TO SourceTable.PrimaryKey.MemberColumns.Count - 1 %>
	<%= GetSqlParameterStatement(SourceTable.PrimaryKey.MemberColumns(i)) %><% IF i < SourceTable.PrimaryKey.MemberColumns.Count - 1 THEN %>,<% END IF %>
	<% NEXT %>
	AS
	SELECT
	<% FOR i = 0 TO SourceTable.Columns.Count - 1%>
	[<%= SourceTable.Columns(i).Name %>]<% IF i < SourceTable.Columns.Count - 1 THEN %>,<% END IF %>
	<% NEXT %>
	FROM
	[<%= SourceTable.Owner %>].[<%= SourceTable.Name %>]
	WHERE
	<% FOR i = 0 TO SourceTable.PrimaryKey.MemberColumns.Count - 1 %>
	<% IF i > 0 THEN %>AND <% END IF %>[<%= SourceTable.PrimaryKey.MemberColumns(i).Name %>] = @<%= SourceTable.PrimaryKey.MemberColumns(i).Name %>
	<% NEXT %>
	GO
	SET QUOTED_IDENTIFIER OFF 
	GO
	SET ANSI_NULLS ON 
	GO
<% END IF %>
<% IF IncludeGetList THEN %>
	SET QUOTED_IDENTIFIER ON 
	GO
	SET ANSI_NULLS OFF 
	GO
	
	------------------------------------------------------------------------------------------------------------------------
	-- Date Created: <%= DateTime.Now.ToLongDateString() %>
	-- Created By:   Generated by CodeSmith
	------------------------------------------------------------------------------------------------------------------------

	CREATE PROCEDURE <%= SourceTable.Owner %>.<%= SelectPrefix %><%= SourceTable.Name %>List
	AS

	SELECT
	<% FOR i = 0 TO SourceTable.Columns.Count - 1%>
	[<%= SourceTable.Columns(i).Name %>]<% IF i < SourceTable.Columns.Count - 1 THEN %>,<% END IF %>
	<% NEXT %>
	FROM
	[<%= SourceTable.Owner %>].[<%= SourceTable.Name %>]

	GO

	SET QUOTED_IDENTIFIER OFF 
	GO
	SET ANSI_NULLS ON 
	GO
<% END IF %>
SET QUOTED_IDENTIFIER ON 
GO
SET ANSI_NULLS OFF 
GO
<% IF IncludeInsert THEN %>
	------------------------------------------------------------------------------------------------------------------------
	-- Date Created: <%= DateTime.Now.ToLongDateString() %>
	-- Created By:   Generated by CodeSmith
	------------------------------------------------------------------------------------------------------------------------

	<% IF SourceTable.PrimaryKey.MemberColumns.Count = 1 AND (SourceTable.PrimaryKey.MemberColumns(0).DataType = DbType.Guid OR SourceTable.PrimaryKey.MemberColumns(0).DataType = DbType.Int16 OR SourceTable.PrimaryKey.MemberColumns(0).DataType = DbType.Int32 OR SourceTable.PrimaryKey.MemberColumns(0).DataType = DbType.Int64) THEN %>
		<%DIM  primaryKey AS ColumnSchema %>
		<% primaryKey = SourceTable.PrimaryKey.MemberColumns(0)%>
		CREATE PROCEDURE <%= SourceTable.Owner %>.<%= InsertPrefix %><%= SourceTable.Name %>
		<% FOR i = 0 TO SourceTable.NonPrimaryKeyColumns.Count - 1%>
		<%= GetSqlParameterStatement(SourceTable.NonPrimaryKeyColumns(i)) %>,
		<% NEXT %>
		<%= GetSqlParameterStatement(primaryKey, true) %>
		AS

		<% IF primaryKey.DataType = DbType.Guid THEN %>
			SET @<%= primaryKey.Name %> = NEWID()
		<% END IF %>
		INSERT INTO [<%= SourceTable.Owner %>].[<%= SourceTable.Name %>] (
		<% IF primaryKey.DataType = DbType.Guid THEN %>
			[<%= primaryKey.Name %>],
		<% END IF %>
		<% FOR i = 0 TO SourceTable.NonPrimaryKeyColumns.Count - 1%>
		[<%= SourceTable.NonPrimaryKeyColumns(i).Name %>]<% IF i < SourceTable.NonPrimaryKeyColumns.Count - 1 THEN %>,<% END IF %>
		<% NEXT %>
		) VALUES (
		<% IF primaryKey.DataType = DbType.Guid THEN %>
			@<%= primaryKey.Name %>,
		<% END IF %>
		<% FOR i = 0 TO SourceTable.NonPrimaryKeyColumns.Count - 1%>
		@<%= SourceTable.NonPrimaryKeyColumns(i).Name %><% IF i < SourceTable.NonPrimaryKeyColumns.Count - 1 THEN %>,<% END IF %>
		<% NEXT %>
		)
		<%IF (primaryKey.DataType = DbType.Int16 OR primaryKey.DataType = DbType.Int32 OR primaryKey.DataType = DbType.Int64) THEN %>
			SET @<%= primaryKey.Name %> = @@IDENTITY
		<% END IF %>
	<% ELSE %>
		CREATE PROCEDURE <%= SourceTable.Owner %>.Insert<%= SourceTable.Name %>
		<% FOR i = 0 TO SourceTable.Columns.Count - 1 %>
		<%= GetSqlParameterStatement(SourceTable.Columns(i)) %><% IF i < SourceTable.Columns.Count - 1 THEN %>,<% END IF %>
		<% NEXT %>
		AS

		-- THIS STORED PROCEDURE NEEDS TO BE MANUALLY COMPLETED
		-- MULITPLE PRIMARY KEY MEMBERS OR NON-GUID/INT PRIMARY KEY
		INSERT INTO [<%= SourceTable.Owner %>].[<%= SourceTable.Name %>] (
		<% FOR i = 0 TO SourceTable.Columns.Count - 1 %>
		[<%= SourceTable.Columns(i).Name %>]<% IF i < SourceTable.Columns.Count - 1 THEN %>,<% END IF %>
		<% NEXT %>
		) VALUES (
		<% FOR i = 0 TO SourceTable.Columns.Count - 1 %>
		@<%= SourceTable.Columns(i).Name %><% IF i < SourceTable.Columns.Count - 1 THEN %>,<% END IF %>
		<% NEXT %>
		)
	<% END IF %>

	GO

	SET QUOTED_IDENTIFIER OFF 
	GO
	SET ANSI_NULLS ON 
	GO

<% END IF %>
<% IF IncludeUpdate THEN %>
	SET QUOTED_IDENTIFIER ON 
	GO
	SET ANSI_NULLS OFF 
	GO
	------------------------------------------------------------------------------------------------------------------------
	-- Date Created: <%= DateTime.Now.ToLongDateString() %>
	-- Created By:   Generated by CodeSmith
	------------------------------------------------------------------------------------------------------------------------

	CREATE PROCEDURE <%= SourceTable.Owner %>.<%= UpdatePrefix %><%= SourceTable.Name %>
	<% FOR i = 0 TO SourceTable.Columns.Count - 1 %>
	<%= GetSqlParameterStatement(SourceTable.Columns(i)) %><% IF i < SourceTable.Columns.Count - 1 THEN %>,<% END IF %> <% IF SourceTable.Columns(i).Description.Length > 0 THEN %>-- <%= SourceTable.Columns(i).Description %><% END IF %>
	<% NEXT %>
	AS

	UPDATE [<%= SourceTable.Owner %>].[<%= SourceTable.Name %>] SET
	<% FOR i = 0 TO SourceTable.NonPrimaryKeyColumns.Count - 1 %>
	[<%= SourceTable.NonPrimaryKeyColumns(i).Name %>] = @<%= SourceTable.NonPrimaryKeyColumns(i).Name %><% IF i < SourceTable.NonPrimaryKeyColumns.Count - 1 THEN %>,<% END IF %>
	<% NEXT %>
	WHERE
	<% FOR i = 0 TO SourceTable.PrimaryKey.MemberColumns.Count - 1%>
	<% IF i > 0 THEN %>AND <% END IF %>[<%= SourceTable.PrimaryKey.MemberColumns(i).Name %>] = @<%= SourceTable.PrimaryKey.MemberColumns(i).Name %>
	<% NEXT %>
	GO
	SET QUOTED_IDENTIFIER OFF 
	GO
	SET ANSI_NULLS ON 
	GO
<% END IF %>