<%-- 
Name: Entity.cst
Author: Eric J. Smith
Description: This template generates a simplistic entity object.  It can only be used from
   the master since the property grid does not support selecting an individual element.
--%>
<%@ CodeTemplate Language="C#" TargetLanguage="C#" Debug="False" Description="Creates a simplistic entity object." %>
<%-- The XmlProperty directive must be registered so that the XML object model is generated. --%>
<%@ XmlProperty Name="EntityMap" Schema="EntityMap.xsd" Optional="True" Category="Context" %>
<%@ Property Name="EntityName" Type="System.String" Optional="True" Category="Context" Description="If this template is being called directly, then specify the element name to target." %>
<%@ Assembly Name="CodeSmith.BaseTemplates" %>
<%@ Assembly Name="CodeSmith.CustomProperties" %>
<%@ Import Namespace="CodeSmith.BaseTemplates" %>
using System;

namespace <%= EntityElement.Namespace %>
{
	/// <summary>
	/// This object represents the properties and methods of a <%= EntityElement.Name %>.
	/// </summary>
	public class <%= EntityElement.Name %>
	{
		<% foreach (Property property in EntityElement.Properties) { %>
		private <%= property.Type %> _<%= StringUtil.ToCamelCase(property.Name) %>;
		<% } %>
		
		public <%= EntityElement.Name %>()
		{
		}
		
		#region Custom - Methods
		// Insert custom methods in here so that they are preserved during re-generation.
		#endregion
	}
}
<script runat="template">
private Entity _entityElement = null;

[Browsable(false)]
public Entity EntityElement
{
	get {return _entityElement;}
	set {_entityElement = value;}
}

protected override void OnPreRender()
{
	// if this template is called directly, then we need to set the EntityElement property using the name of the target entity.
	if (EntityName != null && EntityName.Length > 0)
	{
		for (int i = 0; i < EntityMap.Entities.Count; i++)
		{
			if (EntityMap.Entities[i].Name == EntityName)
			{
				EntityElement = EntityMap.Entities[i];
				break;
			}
		}
	}
	
	if (EntityElement == null) throw new ApplicationException("You must either pass in an EntityElement object from a parent template or set the name of the entity.");
	
	base.OnPreRender();
}
</script>